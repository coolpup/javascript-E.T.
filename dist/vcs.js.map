{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/draw.js",
    "src/sound.js",
    "src/utils.js",
    "src/vcs.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACptRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\nvar utils = require('./utils.js');\n\n/*\n  A very helpful tutorial on how the 2600 works\n  http://atariage.com/forums/topic/33233-sorted-table-of-contents/\n*/\n\nfunction SpriteDrawer(sprite, options) {\n  if (!sprite) {\n    return; // return undefined\n  }\n\n  var defaults = {\n    color : \"#696969\"\n  };\n  var _opts = Object.assign({}, defaults, options);\n\n  // create our canvas that will hold our sprite image\n  // and will be returned in the end\n  var canvas = document.createElement('canvas');\n  var ctx = canvas.getContext(\"2d\");\n\n  function repl(match, p1) {\n    return utils.hex2bin(p1);\n  }\n  sprite = sprite.trim().replace(/.*\\$([a-f0-9]{2}).*\\n?/gi, repl);\n\n  canvas.height = sprite.match(/%?[0-1]{8}[\\s\\n]*/g).length;\n  canvas.width = 8;\n  sprite = sprite.split(\"\");\n\n  var _n = 0;\n  var rbgArr = utils.hex2rgb(_opts.color);\n  var imgData = ctx.createImageData(8, sprite.length);\n\n  for (var i = 0; i < imgData.data.length; i += 4) {\n    imgData.data[i + 0] = parseInt(rbgArr[0], 10);\n    imgData.data[i + 1] = parseInt(rbgArr[1], 10);\n    imgData.data[i + 2] = parseInt(rbgArr[2], 10);\n    if (sprite[_n] === \"1\") {\n      imgData.data[i + 3] = 255;\n    } else {\n      imgData.data[i + 3] = 0;\n    }\n    _n++;\n  }\n  ctx.putImageData(imgData, 0, 0);\n\n  return canvas;\n}\n\nmodule.exports = SpriteDrawer;",
    "/*\nhttp://www.qotile.net/files/2600_music_guide.txt\nhttp://www.popular-musicology-online.com/issues/01/collins-01.html\nhttp://www.alienbill.com/2600/cookbook/music.html\n\nhttp://www.alienbill.com/2600/cookbook/music/stolberg.txt\n\n==============================================================================\nHow to read the tables:\n\nDISTORTION is the value to be stored in the AUDCx registers.\nWAVEFORM: A 1 means the output is set high, a 0 means the output is set low.\n          For distortion 2 & 3 it is source pattern -> clock modifier pattern.\nCLOCKSPEED is the speed at which the registers are shifted.\nPITCH is the value to be stored in the AUDFx registers.\nNTSC are the calculated frequencies for the specified TV norm.\nNOTE is the note value, that is closest to the calculated frequency.\nFREQ is the frequency that this note would have if A4=440 Hz.\nCENT specifies how many percent the calculated frequency is off it's \n     corresponding note frequency\n\nDistortion: 12 & 13\nWaveform  : 10\nClockspeed: CPUclock/114\n*/\nvar vcs_freq_chart = {\n   '0'   :    5274   ,\n   '1'   :    2637   ,\n   '2'   :    1760   ,\n   '3'   :    1318.5 ,\n   '4'   :    1046.5 ,\n   '5'   :     880   ,\n   '6'   :     740   ,\n   '7'   :     659.3 ,\n   '8'   :     587.3 ,\n   '9'   :     523.3 ,\n  '10'   :     466.2 ,\n  '11'   :     440   ,\n  '12'   :     392   ,\n  '13'   :     370   ,\n  '14'   :     349.2 ,\n  '15'   :     329.6 ,\n  '16'   :     311.1 ,\n  '17'   :     293.7 ,\n  '18'   :     277.2 ,\n  '19'   :     261.6 ,\n  '20'   :     246.9 ,\n  '21'   :     233.1 ,\n  '22'   :     233.1 ,\n  '23'   :     220   ,\n  '24'   :     207.7 ,\n  '25'   :     196   ,\n  '26'   :     196   ,\n  '27'   :     185   ,\n  '28'   :     185   ,\n  '29'   :     174.6 ,\n  '30'   :     164.8 ,\n  '31'   :     164.8 \n};\n\n\n/**\n * List of notes and their respective frequences\n * @type {Object}\n */\nvar generic_notes = {\n  'C0': 16.35,\n  'C#0': 17.32,\n  'Db0': 17.32,\n  'D0': 18.35,\n  'D#0': 19.45,\n  'Eb0': 19.45,\n  'E0': 20.60,\n  'F0': 21.83,\n  'F#0': 23.12,\n  'Gb0': 23.12,\n  'G0': 24.50,\n  'G#0': 25.96,\n  'Ab0': 25.96,\n  'A0': 27.50,\n  'A#0': 29.14,\n  'Bb0': 29.14,\n  'B0': 30.87,\n  'C1': 32.70,\n  'C#1': 34.65,\n  'Db1': 34.65,\n  'D1': 36.71,\n  'D#1': 38.89,\n  'Eb1': 38.89,\n  'E1': 41.20,\n  'F1': 43.65,\n  'F#1': 46.25,\n  'Gb1': 46.25,\n  'G1': 49.00,\n  'G#1': 51.91,\n  'Ab1': 51.91,\n  'A1': 55.00,\n  'A#1': 58.27,\n  'Bb1': 58.27,\n  'B1': 61.74,\n  'C2': 65.41,\n  'C#2': 69.30,\n  'Db2': 69.30,\n  'D2': 73.42,\n  'D#2': 77.78,\n  'Eb2': 77.78,\n  'E2': 82.41,\n  'F2': 87.31,\n  'F#2': 92.50,\n  'Gb2': 92.50,\n  'G2': 98.00,\n  'G#2': 103.83,\n  'Ab2': 103.83,\n  'A2': 110.00,\n  'A#2': 116.54,\n  'Bb2': 116.54,\n  'B2': 123.47,\n  'C3': 130.81,\n  'C#3': 138.59,\n  'Db3': 138.59,\n  'D3': 146.83,\n  'D#3': 155.56,\n  'Eb3': 155.56,\n  'E3': 164.81,\n  'F3': 174.61,\n  'F#3': 185.00,\n  'Gb3': 185.00,\n  'G3': 196.00,\n  'G#3': 207.65,\n  'Ab3': 207.65,\n  'A3': 220.00,\n  'A#3': 233.08,\n  'Bb3': 233.08,\n  'B3': 246.94,\n  'C4': 261.63,\n  'C#4': 277.18,\n  'Db4': 277.18,\n  'D4': 293.66,\n  'D#4': 311.13,\n  'Eb4': 311.13,\n  'E4': 329.63,\n  'F4': 349.23,\n  'F#4': 369.99,\n  'Gb4': 369.99,\n  'G4': 392.00,\n  'G#4': 415.30,\n  'Ab4': 415.30,\n  'A4': 440.00,\n  'A#4': 466.16,\n  'Bb4': 466.16,\n  'B4': 493.88,\n  'C5': 523.25,\n  'C#5': 554.37,\n  'Db5': 554.37,\n  'D5': 587.33,\n  'D#5': 622.25,\n  'Eb5': 622.25,\n  'E5': 659.26,\n  'F5': 698.46,\n  'F#5': 739.99,\n  'Gb5': 739.99,\n  'G5': 783.99,\n  'G#5': 830.61,\n  'Ab5': 830.61,\n  'A5': 880.00,\n  'A#5': 932.33,\n  'Bb5': 932.33,\n  'B5': 987.77,\n  'C6': 1046.50,\n  'C#6': 1108.73,\n  'Db6': 1108.73,\n  'D6': 1174.66,\n  'D#6': 1244.51,\n  'Eb6': 1244.51,\n  'E6': 1318.51,\n  'F6': 1396.91,\n  'F#6': 1479.98,\n  'Gb6': 1479.98,\n  'G6': 1567.98,\n  'G#6': 1661.22,\n  'Ab6': 1661.22,\n  'A6': 1760.00,\n  'A#6': 1864.66,\n  'Bb6': 1864.66,\n  'B6': 1975.53,\n  'C7': 2093.00,\n  'C#7': 2217.46,\n  'Db7': 2217.46,\n  'D7': 2349.32,\n  'D#7': 2489.02,\n  'Eb7': 2489.02,\n  'E7': 2637.02,\n  'F7': 2793.83,\n  'F#7': 2959.96,\n  'Gb7': 2959.96,\n  'G7': 3135.96,\n  'G#7': 3322.44,\n  'Ab7': 3322.44,\n  'A7': 3520.00,\n  'A#7': 3729.31,\n  'Bb7': 3729.31,\n  'B7': 3951.07,\n  'C8': 4186.01\n};\n\n/**\n * \n */\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\nvar ctx = new AudioContext();\n\nfunction PlayNote(frq, notelength, bpm, wave, vol) {\n  var o = ctx.createOscillator();\n  var t = ctx.currentTime;\n  bpm = bpm  || 300;\n  wave = wave || \"square\";\n  vol = vol || 0.1;\n\n  // 1 second divided by number of beats per second times number of beats (length of a note)\n  var playlength = 1 / (bpm / 60) * notelength;\n  o.type = wave;\n  o.frequency.value = frq;\n  o.start(t);\n  o.stop(t + playlength);\n  t += playlength;\n  var g = ctx.createGain();\n  o.connect(g);\n  g.connect(ctx.destination);\n  g.gain.value = vol;\n}\n\n\nfunction playSequence(sequence, opts) {\n  var defaults = {\n    bpm : 300,\n    wave : \"square\",\n    vol : 0.1\n  };\n  var _opts = Object.assign({}, defaults, opts);\n\n  sequence = sequence\n    .replace(/^\\s*\\.byte\\s?(.+)\\n?$/gim, '$1,')\n    .replace(/\\n/g, '')\n    .rtrim(\",\")\n    .split(\",\");\n\n  var o; \n  var t = ctx.currentTime;\n  var playlength = 0;\n\n  var _seq = [];\n  var lastPos = 0;\n  sequence.forEach(function(item, pos, arr){\n    if (pos === 0 || item !== arr[pos-1]) {\n      _seq.push( { frq: vcs_freq_chart[item],  notelength : 1 } ); \n      lastPos = _seq.length - 1;\n    } else {\n      _seq[lastPos].notelength++;\n    }\n  });\n\n  for (var i = 0; i < _seq.length; i++) {\n    o = ctx.createOscillator();\n    // 1 second divided by number of beats per second times number of beats (length of a note)\n    playlength = 1 / (_opts.bpm / 60) * _seq[i].notelength;\n    o.type = _opts.wave;\n    o.frequency.value = _seq[i].frq;\n    o.start(t);\n    o.stop(t + playlength);\n    t += playlength;\n    var g = ctx.createGain();\n    o.connect(g);\n    g.connect(ctx.destination);\n    g.gain.value = _opts.vol;\n  }\n}\n\nmodule.exports = playSequence;",
    "'use strict';\n/**\n * Module containing an assortment of useful utility functions\n * @type {Object}\n */\nmodule.exports = {\n  \n  /**\n   * Usually Sprite Clocks are shown in Binary but in the Atari source code for E.T. it showed sprite clock/pixels in Hex\n   * So this converts those hex numbers to Binary\n   * @param  {string} hex the 2 character hex string\n   * @return {string}     the binary number as a string\n   */\n  hex2bin : function(hex) {\n\n    function pad(num, size) {\n      var s = \"000\" + num;\n      return s.substr(s.length - size);\n    }\n\n    var hexArr = hex.split(\"\");\n    var bin = \"\";\n    hexArr.forEach(function(e, i, arr) {\n      var dec = parseInt(arr[i], 16);\n      bin += pad(dec.toString(2), 4);\n    });\n    return bin;\n  },\n\n  /**\n   * Convert a Hex Color to RGB array\n   * @param  {string} hex   a full hex color string includeing the hash.  example: \"#99af34\"\n   * @return {object}       an array containing RGB info [R,G,B]\n   */\n  hex2rgb : function(hex) {\n    var hx = hex.substr(1);\n    var parts = hx.match(/[0-9A-Za-z]{2}/g);\n    parts.forEach(function(e, i, arr) {\n      parts[i] = parseInt(arr[i], 16);\n    });\n    return parts;\n  }\n};\n\nString.prototype.rtrim = function (s) {\n  if (!s) { s = '\\\\s';} // default to whitespace\n  return this.replace(new RegExp(\"[\" + s + \"]*$\"), '');\n};\nString.prototype.ltrim = function (s) {\n  if (!s) { s = '\\\\s';} // default to whitespace\n  return this.replace(new RegExp(\"^[\" + s + \"]*\"), '');\n};",
    "var sound = require('./sound.js');\nvar draw = require('./draw.js');\n\nvar vcs = {\n\n  draw : draw,\n  sound : sound\n};\n\nwindow.vcs = vcs;\n\n// loading system that caches renders of sprites\n// "
  ]
}